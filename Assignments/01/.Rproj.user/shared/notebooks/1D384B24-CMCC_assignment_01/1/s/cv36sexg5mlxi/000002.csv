"0","compute_t_vals <- function(dist1, dist2, iterations){"
"0","  "
"0","  Ns = list(c(5,5), c(5,15), c(15,15))"
"0","  variances = list(c(1,1), c(1,4), c(4,4))"
"0","  "
"0","  # initialize matrix"
"0","  t_vals = matrix(ncol = iterations, nrow = 9)"
"0","  # initialize a dataframe to hold parameters"
"0","  params= data.frame(dist1 = NA, dist1_N = NA, dist1_var = NA, dist2 = NA, dist2_N = NA, dist2_var = NA,"
"0","                     theoretical_95 = NA, actual_95 = NA)"
"0","  # create a counter"
"0","  counter = 1"
"0","  "
"0","  for (N in Ns){"
"0","    for (variance in variances){"
"0","  "
"0","      # calculate t values for parameters"
"0","      t_vals[counter,] = t_calcs(N, variance, dist1, dist2)"
"0","      "
"0","      # create list based on parameters"
"0","      t_95 = calc_middle(N)"
"0","      a_95 = sum(abs(t_vals[counter,]) > t_95)/iterations"
"0","      params = rbind(params, c(dist1, N[1], variance[1], dist2, N[2], variance[2], t_95, a_95))"
"0","      "
"0","      # add 1 to counter"
"0","      counter=counter+1"
"0","    }"
"0","  }"
"0","  # clean up params"
"0","  params = params[-1,]"
"0","  rownames(params) <- seq(length=nrow(params))"
"0","}"
